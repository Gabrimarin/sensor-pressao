import { Box, Paper, Typography } from "@mui/material";
import React from "react";
import SyntaxHighlighter from "react-syntax-highlighter";
import { docco } from "react-syntax-highlighter/dist/cjs/styles/hljs";
import Image from "../../components/Image";
import {
  calcVoltage,
  finalCode,
  readAnalog,
  setupCode,
} from "../../constants/codes";

const CodeWrapper = ({ code }) => {
  return (
    <Paper elevation={3}>
      <SyntaxHighlighter language="c" style={docco} showLineNumbers>
        {code}
      </SyntaxHighlighter>
    </Paper>
  );
};

function Aplicacao() {
  return (
    <div>
      <Typography variant="h3" color="primary">
        Aplica√ß√£o üë®‚Äçüíª
      </Typography>
      <Typography>
        Agora que j√° aprendemos bastante sobre o sensor MPX5700DP e sobre o que
        √© press√£o, est√° na hora de ver como conectar o sensor a qualquer projeto
        eletr√¥nico com o{" "}
        <Typography component="span" color="primary">
          Arduino
        </Typography>
      </Typography>
      <Typography variant="h4" color="primary">
        Setup
      </Typography>
      <Typography>
        Na base de todo programa em Arduino, teremos os mesmos blocos de c√≥digo:
        setup e loop. No setup devemos configurar o projeto em rela√ß√£o ao
        Arduino. O loop √© a fun√ß√£o principal do programa, √© nele que vamos
        computar toda a l√≥gica do sensor de press√£o.
      </Typography>
      <CodeWrapper code={setupCode} />
      <Typography>
        Com o projeto iniciado, a pr√≥xima pergunta a ser feita √©: Como conectar
        e ler o sensor?
      </Typography>
      <Typography variant="h4" color="primary">
        Conectando o Sensor no Arduino
      </Typography>
      <Typography>
        Quando tratamos sobre as especifica√ß√µes do sensor, discutimos sobre seus
        3 principais pinos: VCC, GND e Sa√≠da (Out). A seguir est√° uma
        representa√ß√£o de como conectar cada pino ao Arduino, usando como exemplo
        um Arduino Uno.
      </Typography>
      <Image containerSize={["40%"]} src={"/images/sensorconectado.jpg"} />
      <Typography>
        Repare que o pino de Sa√≠da est√° conectado ao A0 do Arduino, que √© a
        entrada analogica 0. Qualquer outra entrada anal√≥gica poderia ser usada,
        mas para ficar mais pr√°tico iremos sempre usar esta entrada.
      </Typography>
      <Typography variant="h4" color="primary">
        Lendo o sensor
      </Typography>
      <Typography>
        Agora que sabemos como conectar o sensor ao arduino, a seguir vemos como
        podemos ler os valores obtidos pelo sensor no nosso c√≥digo:
      </Typography>
      <CodeWrapper code={readAnalog} />
      <Typography>
        O que fizemos at√© aqui simplesmente foi criar uma v√°riavel chamada
        "ler", que guardar√° o valor lido do sensor. No loop, atualizamos esta
        vari√°vel com o valor lido na porta anal√≥gica A0.
      </Typography>
      <Typography>
        Pode parecer que isto √© o suficiente, mas na verdade ainda faltam alguns
        detalhes. O pino de sa√≠da do sensor MPX5700AP n√£o est√° enviando um valor
        de press√£o para o arduino, e sim uma tens√£o entre 0 e 5V. Por exemplo:
        caso a press√£o medida pelo sensor seja m√°xima (700kPa, como vimos na
        tabela), o sensor enviar√° 5V para a entrada do Arduino. A fun√ß√£o{" "}
        <i>analogRead</i> nos informar√° esta tens√£o com um n√∫mero inteiro de 0 a
        1023.
      </Typography>
      <Image
      size={["40%"]}
        src={"/images/valores.png"}
      />
      <Typography>
        Com um pouco de regra de 3, podemos logo perceber que, para obter a
        voltagem, basta multiplicar o valor lido pelo valor de tens√£o de 5V e
        dividir por 1023.
      </Typography>
      <CodeWrapper code={calcVoltage} />
      <Typography>
        Vimos na tabela inicial que a compensa√ß√£o de tens√£o de press√£o m√≠nima
        varia entre 0.184V e 0.409V. Este par√¢metro √© imprescind√≠vel para que
        nossa medi√ß√£o seja precisa, portanto vamos guardar a m√©dia entre estes
        dois n√∫meros (0.296V).
      </Typography>
      <Typography>
        Al√©m deste par√¢metro, tamb√©m vimos que a tens√£o de press√£o m√°xima √©
        aproximadamente 4.6V, e a press√£o m√°xima √© aproximadamente 700kPa. Isto
        significa que para transformar a tens√£o de sa√≠da do sensor em press√£o
        (kPa), basta multiplic√°-la por 700 e dividi-la por 4.6, n√£o esquecendo
        de subtrair a tens√£o de compensa√ß√£o.
      </Typography>
      <CodeWrapper code={finalCode} />
    </div>
  );
}

export default Aplicacao;
